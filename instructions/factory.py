from . import *
from .base import *
from .comparisons import *
from .constants import *
from .loads import *
from .stack import *
from .stores import *
from .maths import *
import types

single = types.SimpleNamespace()
single.nop         = NOP()
single.aconst_null = ACONST_NULL()
single.iconst_m1   = ICONST_M1()
single.iconst_0    = ICONST_0()
single.iconst_1    = ICONST_1()
single.iconst_2    = ICONST_2()
single.iconst_3    = ICONST_3()
single.iconst_4    = ICONST_4()
single.iconst_5    = ICONST_5()
single.lconst_0    = LCONST_0()
single.lconst_1    = LCONST_1()
single.fconst_0    = FCONST_0()
single.fconst_1    = FCONST_1()
single.fconst_2    = FCONST_2()
single.dconst_0    = DCONST_0()
single.dconst_1    = DCONST_1()
single.iload_0     = ILOAD_0()
single.iload_1     = ILOAD_1()
single.iload_2     = ILOAD_2()
single.iload_3     = ILOAD_3()
single.lload_0     = LLOAD_0()
single.lload_1     = LLOAD_1()
single.lload_2     = LLOAD_2()
single.lload_3     = LLOAD_3()
single.fload_0     = FLOAD_0()
single.fload_1     = FLOAD_1()
single.fload_2     = FLOAD_2()
single.fload_3     = FLOAD_3()
single.dload_0     = DLOAD_0()
single.dload_1     = DLOAD_1()
single.dload_2     = DLOAD_2()
single.dload_3     = DLOAD_3()
single.aload_0     = ALOAD_0()
single.aload_1     = ALOAD_1()
single.aload_2     = ALOAD_2()
single.aload_3     = ALOAD_3()
# single.iaload      = IALOAD()
# single.laload      = LALOAD()
# single.faload      = FALOAD()
# single.daload      = DALOAD()
# single.aaload      = AALOAD()
# single.baload      = BALOAD()
# single.caload      = CALOAD()
# single.saload      = SALOAD()
single.istore_0 = ISTORE_0()
single.istore_1 = ISTORE_1()
single.istore_2 = ISTORE_2()
single.istore_3 = ISTORE_3()
single.lstore_0 = LSTORE_0()
single.lstore_1 = LSTORE_1()
single.lstore_2 = LSTORE_2()
single.lstore_3 = LSTORE_3()
single.fstore_0 = FSTORE_0()
single.fstore_1 = FSTORE_1()
single.fstore_2 = FSTORE_2()
single.fstore_3 = FSTORE_3()
single.dstore_0 = DSTORE_0()
single.dstore_1 = DSTORE_1()
single.dstore_2 = DSTORE_2()
single.dstore_3 = DSTORE_3()
single.astore_0 = ASTORE_0()
single.astore_1 = ASTORE_1()
single.astore_2 = ASTORE_2()
single.astore_3 = ASTORE_3()
# single.iastore  = IASTORE()
# single.lastore  = LASTORE()
# single.fastore  = FASTORE()
# single.dastore  = DASTORE()
# single.aastore  = AASTORE()
# single.bastore  = BASTORE()
# single.castore  = CASTORE()
# single.sastore  = SASTORE()
single.pop     = POP()
single.pop2    = POP2()
single.dup     = DUP()
single.dup_x1  = DUP_X1()
single.dup_x2  = DUP_X2()
single.dup2    = DUP2()
single.dup2_x1 = DUP2_X1()
single.dup2_x2 = DUP2_X2()
single.swap    = SWAP()
single.iadd    = IADD()
single.ladd    = LADD()
single.fadd    = FADD()
single.dadd    = DADD()
single.isub    = ISUB()
single.lsub    = LSUB()
single.fsub    = FSUB()
single.dsub    = DSUB()
single.imul    = IMUL()
single.lmul    = LMUL()
single.fmul    = FMUL()
single.dmul    = DMUL()
single.idiv    = IDIV()
single.ldiv    = LDIV()
single.fdiv    = FDIV()
single.ddiv    = DDIV()
single.irem    = IREM()
single.lrem    = LREM()
single.frem    = FREM()
single.drem    = DREM()
single.ineg    = INEG()
single.lneg    = LNEG()
single.fneg    = FNEG()
single.dneg    = DNEG()
single.ishl    = ISHL()
single.lshl    = LSHL()
single.ishr    = ISHR()
single.lshr    = LSHR()
single.iushr   = IUSHR()
single.lushr   = LUSHR()
single.iand    = IAND()
single.land    = LAND()
single.ior     = IOR()
single.lor     = LOR()
single.ixor    = IXOR()
single.lxor    = LXOR()
single.i2l     = I2L()
single.i2f     = I2F()
single.i2d     = I2D()
single.l2i     = L2I()
single.l2f     = L2F()
single.l2d     = L2D()
single.f2i     = F2I()
single.f2l     = F2L()
single.f2d     = F2D()
single.d2i     = D2I()
single.d2l     = D2L()
single.d2f     = D2F()
single.i2b     = I2B()
single.i2c     = I2C()
single.i2s     = I2S()
single.lcmp    = LCMP()
single.fcmpl   = FCMPL()
single.fcmpg   = FCMPG()
single.dcmpl   = DCMPL()
single.dcmpg   = DCMPG()
# single.ireturn = IRETURN()
# single.lreturn = LRETURN()
# single.freturn = FRETURN()
# single.dreturn = DRETURN()
# single.areturn = ARETURN()
# single._return = RETURN()
# single.arraylength   = ARRAY_LENGTH()
# single.athrow        = ATHROW()
# single.monitorenter  = MONITOR_ENTER()
# single.monitorexit   = MONITOR_EXIT()
# single.invoke_native = INVOKE_NATIVE()

def new_instruction(opcode: int) -> Instruction:
  match opcode:
    case 0x00:
      return NOP()
    case 0x01:
      return ACONST_NULL()
    
    case _:
      assert False, f'Unsupported opcode: {opcode:x}'
    

